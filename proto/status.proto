import "types.proto";
import "preview.proto";

package pb;

enum EmcTaskState {
    EMC_TASK_EXEC_ERROR = 1;
    EMC_TASK_EXEC_DONE = 2;
    EMC_TASK_EXEC_WAITING_FOR_MOTION = 3;
    EMC_TASK_EXEC_WAITING_FOR_MOTION_QUEUE = 4;
    EMC_TASK_EXEC_WAITING_FOR_IO = 5;
    EMC_TASK_EXEC_WAITING_FOR_MOTION_AND_IO = 6;
    EMC_TASK_EXEC_WAITING_FOR_DELAY = 7;
    EMC_TASK_EXEC_WAITING_FOR_SYSTEM_CMD = 8;
    EMC_TASK_EXEC_WAITING_FOR_SPINDLE_ORIENTED = 9;
}

enum EmcInterpStateType {
    EMC_TASK_INTERP_IDLE = 1;
    EMC_TASK_INTERP_READING = 2;
    EMC_TASK_INTERP_PAUSED = 3;
    EMC_TASK_INTERP_WAITING = 4;
}

enum EmcInterpExitCodeType {
    EMC_INTERP_EXIT_OK = 1;
    EMC_INTERP_EXIT_EXIT = 2;
    EMC_INTERP_EXIT_EXECUTE_FINISH = 3;
    EMC_INTERP_EXIT_ENDFILE = 4;
    EMC_INTERP_EXIT_FILE_NOT_OPEN = 5;
    EMC_INTERP_EXIT_ERROR = 6;
}

enum EmcKinematicsType {
    KINEMATICS_IDENTITY = 1;
    KINEMATICS_FORWARD_ONLY = 2;
    KINEMATICS_INVERSE_ONLY = 3;
    KINEMATICS_BOTH = 4;
}

enum EmcTrajectoryModeType {
    EMC_TRAJ_MODE_FREE = 1;
    EMC_TRAJ_MODE_COORD = 2;
    EMC_TRAJ_MODE_TELEOP = 3;
}

enum EmcCanonUnitsType {
    CANON_UNITS_INCHES = 1;
    CANON_UNITS_MM = 2;
    CANON_UNITS_CM = 3;
}

enum EmcTaskModeType {
    EMC_TASK_MODE_MDI = 1;
    EMC_TASK_MODE_MANUAL = 2;
    EMC_TASK_MODE_AUTO = 3;
}

enum EmcTaskStateType {
    EMC_TASK_STATE_OFF = 1;
    EMC_TASK_STATE_ON = 2;
    EMC_TASK_STATE_ESTOP = 3;
    EMC_TASK_STATE_ESTOP_RESET = 4;
}

enum EmcAxisType {
    EMC_AXIS_LINEAR = 1;
    EMC_AXIS_ANGULAR = 2;
}

message EmcToolResult {
    optional int32          id = 1;
    optional double         xOffset = 2;
    optional double         yOffset = 3;
    optional double         zOffset = 4;
    optional double         aOffset = 5;
    optional double         bOffset = 6;
    optional double         cOffset = 7;
    optional double         uOffset = 8;
    optional double         vOffset = 9;
    optional double         wOffset = 10;
    optional double         diameter = 11;
    optional double         frontangle = 12;
    optional double         backangle = 13;
    optional double         orientation = 14;
}

message EmcStatusMotionAxis {
    optional bool           enabled = 1;
    optional bool           fault = 2;
    optional double         ferror_current = 3;
    optional double         ferror_highmark = 4;
    optional bool           homed = 5;
    optional bool           homing = 6;
    optional bool           inpos = 7;
    optional double         input = 8;
    optional bool           max_hard_limit = 9;
    optional bool           max_soft_limit = 10;
    optional bool           min_hard_limit = 11;
    optional bool           min_soft_limit = 12;
    optional double         output = 13;
    optional bool           override_limits = 14;
    optional double         velocity = 15;
}

message EmcStatusConfigAxis {
    optional EmcAxisType    EmcAxisType = 1;
    optional double         backlash = 2;
    optional double         max_ferror = 3;
    optional double         max_position_limit = 4;
    optional double         min_ferror = 5;
    optional double         min_position_limit = 6;
    optional double         units = 7;
}

message EmcStatusConfig {
    optional double                 acceleration = 1;
    optional string                 angular_units = 2;
    optional string                 axes = 3;
    optional EmcStatusConfigAxis    axis = 4;
    optional int32                  axis_mask = 5;
    optional double                 cycle_time = 6;
    optional int32                  debug = 7;
    optional EmcKinematicsType      kinematics_type = 8;
    optional string                 linear_units = 9;
    optional double                 max_acceleration = 10;
    optional double                 max_velocity = 11;
    optional EmcCanonUnitsType      program_units = 12;
    optional double                 velocity = 13;
}

message EmcStatusMotion {
    optional int32                  active_queue = 1;
    optional Position               actual_position = 2;
    optional bool                   adaptive_feed_enabled = 3;
    repeated double                 ain = 4;
    repeated double                 aout = 5;
    repeated EmcStatusMotionAxis    axis = 6;
    optional bool                   block_delete = 7;
    optional int32                  current_line = 8;
    optional double                 current_vel = 9;
    optional double                 delay_left = 10;
    repeated bool                   din = 11;
    optional double                 distance_to_go = 12;
    repeated bool                   dout = 13;
    optional Position               dtg = 14;
    optional bool                   enabled = 15;
    optional bool                   feed_hold_enabled = 16;
    optional bool                   feed_override_enabled = 17;
    optional double                 feedrate = 18;
    optional OriginIndex            g5x_index = 19;
    optional Position               g5x_offset = 20;
    optional Position               g92_offset = 21;
    optional bool                   homed = 22;
    optional int32                  id = 23;
    optional bool                   inpos = 24;
    optional Position               joint_actual_position = 25;
    optional Position               joint_position = 26;
    repeated int32                  limit = 27;
    optional int32                  motion_line = 28;
    optional EmcTrajectoryModeType  motion_type = 29;
    optional EmcTrajectoryModeType  motion_mode = 30;
    optional bool                   paused = 31;
    optional Position               position = 32;
    optional bool                   probe_tripped = 33;
    optional bool                   probe_val = 34;
    optional Position               probed_position = 35;
    optional bool                   probing = 36;
    optional int32                  queue = 37;
    optional bool                   queue_full = 38;
    optional double                 rotation_xy = 39;
    optional bool                   spindle_break = 40;
    optional int32                  spindle_direction = 41;
    optional bool                   spindle_enabled = 42;
    optional int32                  spindle_increasing = 43;
    optional bool                   spindle_override_enabled = 44;
    optional double                 spindle_speed = 45;
    optional double                 spindlerate = 46;
    optional RCS_STATUS             state = 47;
}

message EmcStatusIo {
    optional bool           estop = 1;
    optional bool           flood = 2;
    optional bool           lube = 3;
    optional int32          lube_level = 4;
    optional bool           mist = 5;
    optional int32          pocket_prepped = 6;
    optional int32          tool_in_spindle = 7;
    optional Position       tool_offset = 8;
    repeated EmcToolResult  tool_table = 9;
}

message EmcStatusTask {
    optional int32              echo_serial_number = 1;
    optional EmcTaskState       exec_state = 2;
    optional string             file = 3;
    optional bool               input_timeout = 4;
    optional bool               optional_stop = 5;
    optional int32              read_line = 6;
    optional EmcTaskModeType    task_mode = 7;
    optional bool               task_paused = 8;
    optional EmcTaskStateType   task_state = 9;
}

message EmcStatusInterp {
    optional string                 command = 1;
    repeated int32                  gcodes = 2;
    optional EmcInterpStateType     interp_state = 3;
    optional EmcInterpExitCodeType  interpreter_errcode = 4;
    repeated int32                  mcodes = 5;
    repeated double                 settings = 6;
}
